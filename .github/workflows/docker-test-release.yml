jobs:
  build-and-push:
    if: github.ref == 'refs/heads/master' && github.repository_owner == 'Apiman'
    name: Publish Docker images based on the Apiman ${{ inputs.apiman-version }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Apiman Monorepo
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Version information
      run: 'echo "Apiman version: ${{ inputs.apiman-version }}"

        echo "Push to repos: ${{ inputs.push-to-repos }}"

        echo "Is snapshot: ${{ inputs.snapshot }}"

        '
    - continue-on-error: true
      name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
    - continue-on-error: true
      name: Login to GitHub Container Registry (GHCR)
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - continue-on-error: true
      env:
        APIMAN_VERSION: ${{ inputs.apiman-version }}
        IMAGE_NAME: ${{ matrix.docker-images.name }}
        IS_SNAPSHOT: ${{ inputs.snapshot }}
      name: Calculate Docker tags
      run: 'DOCKER_TAGS=$(bash .github/workflows/support/calculate-docker-tags.sh)

        echo Tags: "$DOCKER_TAGS"

        echo ''DOCKER_TAGS<<EOF'' >> $GITHUB_ENV

        echo "$DOCKER_TAGS" >> $GITHUB_ENV

        echo ''EOF'' >> $GITHUB_ENV

        '
    - continue-on-error: true
      if: inputs.push-to-repos == true
      name: Build & Push ${{ matrix.docker-images.description }} (${{ matrix.docker-images.name
        }})
      uses: docker/build-push-action@v3
      with:
        build-args: 'APIMAN_VERSION=${{ inputs.apiman-version }}

          ${{ matrix.docker-images.build-args }}

          '
        context: ${{ matrix.docker-images.path }}
        push: false
        tags: ${{ env.DOCKER_TAGS }}
    strategy:
      matrix:
        docker-images:
        - build-args: ''
          description: Apiman Vert.x Gateway (Official Image)
          name: vertx-gateway
          path: ./containers/vertx-gateway
        - description: Apiman WildFly Manager (Official Image)
          name: wildfly-manager
          path: ./containers/wildfly-manager
        - description: Apiman Tomcat Manager (Official Image)
          name: tomcat-manager
          path: ./containers/tomcat-manager
        - description: Apiman Migration Assistant (Official Image)
          name: migration-assistant
          path: ./containers/migration-assistant
        - description: Apiman CLI (Community Image)
          name: cli
          path: ./containers/cli
        - description: Apiman WildFly All-In-One (Legacy)
          name: on-wildfly
          path: ./containers/on-wildfly
        - description: Apiman Vert.x OpenShift (Community Image)
          name: vertx-openshift
          path: ./containers/vertx-openshift
        - description: Apiman Vert.x Standalone (Community Image)
          name: vertx-standalone
          path: ./containers/vertx-standalone
name: Docker Release CI
on:
  repository_dispatch:
    types: trigger-ga___docker-test-release.yml
